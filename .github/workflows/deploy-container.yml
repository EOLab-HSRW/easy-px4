name: Deploy Multi-Arch Docker Image

on:
  push:
    branches: [main]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        platform:
          - linux/amd64
          - linux/arm64
    steps:
      - name: Checkout source
        uses: actions/checkout@v4

      - name: Set up QEMU (only for arm64)
        if: matrix.platform == 'linux/arm64'
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract architecture for tagging
        id: extract
        run: echo "ARCH=$(echo '${{ matrix.platform }}' | cut -d'/' -f2)" >> $GITHUB_ENV

      - name: Build and push ${{ env.ARCH }} image
        uses: docker/build-push-action@v6
        with:
          context: .
          platforms: ${{ matrix.platform }}
          push: true
          tags: ghcr.io/eolab-hsrw/easy-px4:ubuntu-22.04-${{ env.ARCH }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

  create-manifest:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Log in to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Create and push multi-arch manifest
        run: |
          docker manifest create ghcr.io/eolab-hsrw/easy-px4:ubuntu-22.04 \
            --amend ghcr.io/eolab-hsrw/easy-px4:ubuntu-22.04-amd64 \
            --amend ghcr.io/eolab-hsrw/easy-px4:ubuntu-22.04-arm64
          docker manifest push ghcr.io/eolab-hsrw/easy-px4:ubuntu-22.04
